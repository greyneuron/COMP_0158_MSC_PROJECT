CREATE TABLE W2V_TOKEN (uniprot_id VARCHAR(16), type VARCHAR(16), token VARCHAR(64), start INT, end INT);
CREATE TABLE W2V_PROTEIN (uniprot_id VARCHAR(16), start INT, end INT);

# load proteins - took 13mins
LOAD DATA LOCAL INFILE '/data/dev/ucl/data/protein/uniprotkb-2759_78494531_1000.dat' INTO TABLE W2V_PROTEIN FIELDS TERMINATED BY '|';
CREATE INDEX PTN_IDX ON W2V_PROTEIN (UNIPROT_ID);


#
# ------- CREATING THE PRE-CORPUS -----------
#

# select unique pfam tokens 
SELECT DISTINCT TOKEN FROM W2V_TOKEN WHERE TYPE='PFAM'; # this took 8min 15s and returned 20,725 items


# ---- Looping

# return first 20 rows
SELECT * FROM W2V_PROTEIN ORDER BY UNIPROT_ID LIMIT 20;

# The combination of these 2 separate queries does the same - rows presumably start at zero
# starting at 0, return first 10 rows
SELECT * FROM W2V_PROTEIN ORDER BY UNIPROT_ID LIMIT 0,10;

# starting at 10, return next 10 rows 
SELECT * FROM W2V_PROTEIN ORDER BY UNIPROT_ID LIMIT 10,10;



# -- SEEMS TO WORK - 100,000 executions takes 2.625s
# -- SEEMS TO WORK - 500,000 executions takes 16s
SELECT W2V_PROTEIN.UNIPROT_ID, W2V_TOKEN.*
FROM (
    SELECT UNIPROT_ID
    FROM W2V_PROTEIN
    ORDER BY UNIPROT_ID
    LIMIT 500000) AS W2V_PROTEIN INNER JOIN W2V_TOKEN AS W2V_TOKEN ON W2V_PROTEIN.UNIPROT_ID = W2V_TOKEN.UNIPROT_ID;

SELECT W2V_PROTEIN.UNIPROT_ID, W2V_TOKEN.*
FROM (
    SELECT UNIPROT_ID
    FROM W2V_PROTEIN
    ORDER BY UNIPROT_ID
    LIMIT 0, 30) AS W2V_PROTEIN INNER JOIN W2V_TOKEN AS W2V_TOKEN ON W2V_PROTEIN.UNIPROT_ID = W2V_TOKEN.UNIPROT_ID;


SELECT * FROM employees
LIMIT 1000
INTO OUTFILE '/var/lib/mysql-files/employees.txt'
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n';

SELECT * FROM W2V_TOKEN ORDER BY UNIPROT_ID LIMIT 20
INTO OUTFILE '20_tokens.txt'
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n';